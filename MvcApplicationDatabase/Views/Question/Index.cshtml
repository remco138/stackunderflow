@model IEnumerable<MvcApplicationDatabase.Models.Question>
@Scripts.Render("Content/Site.js")

@{
    string sort = Request["sort"];
    if (sort.IsEmpty()) {
        sort = "newest";
    }
    ViewBag.Title = "Questions";
    string[] tabs = {"newest", "frequent", "votes", "active", "unanswered"};
}

<h2 class="title">All @ViewBag.Title</h2>
<div class="subheader">
    <div id="tabs">
        @foreach(string tab in tabs) {
            <a href="?sort=@tab" @(sort == tab ? "class=youarehere" : "")>@tab</a>
        }

        <a href="?sort=reported" class="reports-tab@(sort == "reported" ? " youarehere" : "")">Reports 
         </a>
            @if(Model.Any(q => q.Reported != null && q.Reported != "")) {
                    <span class="exclamation-mark"> ! </span>
            }
    </div>
</div>
<p class="dno">
    @Html.ActionLink("Create New", "Create")
</p>

<div id="question-list">
    @foreach (var item in Model) {
    <div class="@((item.Active == true) ? "question-summary" : "question-summary-inactive")" id="question-summary-@item.Question_id">
        <div class="cp">
            <div class="ql_votes">
                <div class="count">@item.Posts.First().Votes</div>
                <div>votes</div>
            </div>
            <div class="ql_answers">
                @{ int answers = item.Posts.Count() - 1; }
                <div class="count">@answers</div>
                <div>answers</div>
            </div>
            <div class="ql_views">
                <div>@item.Views views</div>
            </div>
        </div>
        <div class="question-report-menu" style="display:none">
            <div class="report-menu-option">
                @if(item.Active == true) {
                    <text>Report:</text>
                    @Html.ActionLink("X", "Report", new { controller = "question", id=item.Question_id }, new { @class = "", onclick="return confirm('Are you sure you want to report this question?');"})
                }
            </div>

            @if (ViewBag.isAdmin != true)
            {
                <div class="admin-menu">
                    <div class="report-menu-option">
                        @if (item.Reported != null && item.Reported != "") {
                            <text>Un-report</text>
                            @Html.ActionLink("X", "RemoveReport", new { controller = "question", id = item.Question_id }, new { @class = "", onclick = "return confirm('Are you sure you want to remove the reported status of this question?');" })
                        }
                    </div>
                    <div class="report-menu-option">
                        @(item.Active == true ? "Lock: " : "Unlock: ")
                        @Html.ActionLink("X", "Active", new { controller = "question", id=item.Question_id, active = !item.Active }, new { @class = "", onclick="return confirm('Are you sure you want to lock/unlock this question?');" })
                     </div>
                </div>
            }
            </div>
        <div class="summary">
            <h3>@Html.ActionLink(item.Title, item.Question_id.ToString(), "question")
                @if(item.Reported != null && item.Reported != "") {
                    <span class="exclamation-mark"> ! </span>
                }
            </h3>

            <div class="tags">
                @foreach (var tag in item.Tags)
                {
                    @Html.ActionLink(@tag.Name, @tag.Name.ToLower(), new { controller = "question/tagged" }, new { @class = "post-tag", })
                }
            </div>
        </div>
    </div>
    }
</div>
<div id="toptags">
    <h2>Recent Tags</h2>
    @foreach (var tag in ViewBag.RecentTags)
    {
       <p><a href="@Html.Raw("/question/tagged/" + Uri.EscapeDataString(tag.Name.ToLower()))" class="post-tag">@tag.Name</a> x @tag.Questions.Count</p> 
    }
</div>
<div class="clear"></div>
<div id="pager">
    @{
        // define page shizzle
        int page = Request["page"] != null ? Convert.ToInt32(Request["page"]) : 1;
        int pagesize = Request["pagesize"] != null ? Convert.ToInt32(Request["pagesize"]) : ViewBag.StdPageSize;
    }
    <p><b>Page: </b>
        @for (int i = 0; i <= Math.Abs(ViewBag.QuestionCount/pagesize); i++)
        {
            @Html.ActionLink((i+1).ToString() + " ", "Index", new { page=i+1, pagesize=pagesize })
        }
    </p>
    <p>
        <b>Pagesize: </b>
        @Html.ActionLink("5", "Index", new { page=page, pagesize=5 }) | 
        @Html.ActionLink("10", "Index", new { page=page, pagesize=10 })  | 
        @Html.ActionLink("15", "Index", new { page=page, pagesize=15 })
    </p>
</div>
<br />