@model IEnumerable<MvcApplicationDatabase.Models.Question>
@Scripts.Render("Content/Site.js")

@{
    string sort = Request["sort"];
    if (sort.IsEmpty()) {
        sort = "newest";
    }
    ViewBag.Title = "Questions";
    ViewBag.StdPageSize = ViewBag.StdPageSize != null ? ViewBag.StdPageSize : 15;
    Dictionary<string, string> tabs = new Dictionary<string,string>();
    tabs.Add("newest", "the most recently asked questions");
    tabs.Add("votes", "questions with the most votes");
    tabs.Add("unanswered", "questions that have no upvoted answers");
}

<h2 class="title">All @ViewBag.Title</h2>
<div class="subheader">
    <div id="tabs">
        @foreach(KeyValuePair<string, string> tab in tabs) {
            <a href="?sort=@tab.Key" title="@tab.Value" @(sort == tab.Key ? "class=youarehere" : "")>@tab.Key</a>
        }

        @if (ViewBag.showReportedTab)
        {
            <a href="?sort=reported" class="reports-tab@(sort == "reported" ? " youarehere" : "")">Reports</a>
            <span class="exclamation-mark"> ! </span>
        }
    </div>
</div>
<p class="dno">
    @Html.ActionLink("Create New", "Create")
</p>

<div id="question-list">
    @Html.Partial("_QuestionListPartial", Model)
</div>

<div id="toptags">
    <h2>Recent Tags</h2>
    @foreach (var tag in ViewBag.RecentTags)
    {
       <p><a href="@Html.Raw("/question/tagged/" + Uri.EscapeDataString(tag.Name.ToLower()))" class="post-tag">@tag.Name</a> x @tag.Questions.Count</p> 
    }
</div>
<div class="clear"></div>
<div id="pager">
    @{
        // define page shizzle
        int page = Request["page"] != null ? Convert.ToInt32(Request["page"]) : 1;
        int pagesize = Request["pagesize"] != null ? Convert.ToInt32(Request["pagesize"]) : ViewBag.StdPageSize;
    }
    <p><b>Page: </b>
        @for (int i = 0; i <= Math.Abs(ViewBag.QuestionCount/pagesize); i++)
        {
            @Html.ActionLink((i+1).ToString() + " ", "Index", new { page=i+1, pagesize=pagesize })
        }
    </p>
    <p>
        <b>Pagesize: </b>
        @Html.ActionLink("5", "Index", new { page=page, pagesize=5 }) | 
        @Html.ActionLink("10", "Index", new { page=page, pagesize=10 })  | 
        @Html.ActionLink("15", "Index", new { page=page, pagesize=15 })
    </p>
</div>
<br />