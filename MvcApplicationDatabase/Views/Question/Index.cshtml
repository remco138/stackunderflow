@model IEnumerable<MvcApplicationDatabase.Models.Question>
@Scripts.Render("Content/Site.js")

@{
    string sort = Request["sort"];
    if (sort.IsEmpty()) {
        sort = "newest";
    }
    ViewBag.Title = "Questions";
    ViewBag.StdPageSize = ViewBag.StdPageSize != null ? ViewBag.StdPageSize : 15;
    Dictionary<string, string> tabs = new Dictionary<string,string>();
    tabs.Add("newest", "the most recently asked questions");
    tabs.Add("votes", "questions with the most votes");
    tabs.Add("unanswered", "questions that have no upvoted answers");
}

<h2 class="title">All @ViewBag.Title</h2>
<div class="subheader">
    <div id="tabs">
        @foreach(KeyValuePair<string, string> tab in tabs) {
            <a href="?sort=@tab.Key" title="@tab.Value" @(sort == tab.Key ? "class=youarehere" : "")>@tab.Key</a>
        }

        @if (ViewBag.showReportedTab)
        {
            <a href="?sort=reported" class="reports-tab@(sort == "reported" ? " youarehere" : "")">Reports</a>
            <span class="exclamation-mark"> ! </span>
        }
    </div>
</div>
<p class="dno">
    @Html.ActionLink("Create New", "Create")
</p>

<div id="question-list">
    @foreach (var item in Model) {
    <div class="@((item.Active == true) ? "question-summary" : "question-summary-inactive")" id="question-summary-@item.Question_id">
        <div class="cp">
            <div class="ql_votes">
                <div class="count">@item.Posts.First().Votes</div>
                <div>votes</div>
            </div>
            <div class="ql_answers">
                @{ int answers = item.Posts.Count() - 1; }
                <div class="count">@answers</div>
                <div>answers</div>
            </div>
            <div class="ql_views">
                <div>@item.Views views</div>
            </div>
        </div>
            
        <div class="summary">
            <h3>@Html.ActionLink(item.Title, item.Question_id.ToString(), "question")
                @if(ViewBag.isAdmin == true && item.Reported != null && item.Reported != "") {
                    <span class="exclamation-mark"> ! </span>
                }
            </h3>
            <div class="tags">
                @foreach (var tag in item.Tags)
                {
                    @Html.ActionLink(@tag.Name, @tag.Name.ToLower(), new { controller = "question/tagged" }, new { @class = "post-tag", })
                }
            </div>
            <div class="post_user" style="margin-top:-25px;">
                <p>asked @item.Posts.FirstOrDefault().DateCreated.ToString("dd MMM \\a\\t HH:mm")</p>
                <p>
                    <img class="avatar" src="~/Content/themes/layout/@item.Posts.FirstOrDefault().User.Photo" alt="avatar" width="40px" height="40px" />
                    @Html.ActionLink(item.Posts.FirstOrDefault().User.FirstName + " " + item.Posts.FirstOrDefault().User.LastName, "details/" + item.Posts.FirstOrDefault().User_id, "user")
                </p>
            </div>
        </div>
    </div>
    }

</div>
<div id="toptags">
    <h2>Recent Tags</h2>
    @foreach (var tag in ViewBag.RecentTags)
    {
       <p><a href="@Html.Raw("/question/tagged/" + Uri.EscapeDataString(tag.Name.ToLower()))" class="post-tag">@tag.Name</a> x @tag.Questions.Count</p> 
    }
</div>
<div class="clear"></div>
<div id="pager">
    @{
        // define page shizzle
        int page = Request["page"] != null ? Convert.ToInt32(Request["page"]) : 1;
        int pagesize = Request["pagesize"] != null ? Convert.ToInt32(Request["pagesize"]) : ViewBag.StdPageSize;
    }
    <p><b>Page: </b>
        @for (int i = 0; i <= Math.Abs(ViewBag.QuestionCount/pagesize); i++)
        {
            @Html.ActionLink((i+1).ToString() + " ", "Index", new { page=i+1, pagesize=pagesize })
        }
    </p>
    <p>
        <b>Pagesize: </b>
        @Html.ActionLink("5", "Index", new { page=page, pagesize=5 }) | 
        @Html.ActionLink("10", "Index", new { page=page, pagesize=10 })  | 
        @Html.ActionLink("15", "Index", new { page=page, pagesize=15 })
    </p>
</div>
<br />