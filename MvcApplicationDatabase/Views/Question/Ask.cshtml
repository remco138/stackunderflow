@model MvcApplicationDatabase.Models.Question
@{
    ViewBag.Title = "Ask";
}
    @Scripts.Render("~/Content/js/Markdown.Converter.js")
    @Scripts.Render("~/Content/js/Markdown.Editor.js")
    @Scripts.Render("~/Content/js/Markdown.Sanitizer.js")

@using (Html.BeginForm()) {
   
    @Html.ValidationSummary(true) 
    <center>
    <div id="question-form">

        <div class="form-item ask-title">
            <table class="ask-title-table">
                <tbody>
                    <tr>
                        <td class="ask-title-cell-key">  @Html.LabelFor(q => q.Title) </td>
                        <td class="ask-title-cell-value">@Html.TextBoxFor(q => q.Title, new { @class = "ask-title-field" }) </td>
                    </tr>
                </tbody>
            </table>
        </div>


        <div class="form-item">
            <div class="wmd-panel">
                <div id="wmd-button-bar"></div>
                @Html.TextArea("content", new { @class = "post-editor wmd-input", @id = "wmd-input" })
            </div>
            <div id="wmd-preview" class="wmd-panel wmd-preview"></div>
        </div>

        
        <div class="form-item">
            @Html.LabelFor(q => q.Tags)
            <input id="tagnames" name="tagnames" type="text" style="width: 650px;" value="" tabindex="103">
        </div>
        
        
        <div id="question-only-section"> 
            <div class="form-submit clear">
                <input type="submit" id="submit-button"  value="Post Your Question" tabindex="120">
                <a href="#" class="discard-question dno">discard</a>
            </div>
        </div>

    </div>
    </center>
<script type="text/javascript">
    (function () {
        var converter1 = Markdown.getSanitizingConverter();

        converter1.hooks.chain("preBlockGamut", function (text, rbg) {
            return text.replace(/^ {0,3}""" *\n((?:.*?\n)+?) {0,3}""" *$/gm, function (whole, inner) {
                return "<blockquote>" + rbg(inner) + "</blockquote>\n";
            });
        });

        var editor1 = new Markdown.Editor(converter1);

        editor1.run();
    })();
</script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}